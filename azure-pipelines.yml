# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  ROBOT_TESTS_DIR: 'Tests'
  ROBOT_REPORTS_DIR: 'Results'
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'
- script: |
    python -m pip install --upgrade pip
    pip install robotframework
    pip install robotframework-seleniumlibrary
  displayName: 'Install dependencies'

- script: |
    echo "Installing Chrome"
    sudo apt-get update
    sudo apt-get install -y google-chrome-stable
    echo "Installed Chrome version:"
    google-chrome --version
  displayName: 'Install Chrome'

- script: |
    echo "Installing ChromeDriver"
    CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -n1)
    echo $(CHROME_VERSION)
    CHROME_DRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*}")
    echo $(CHROME__DRIVER_VERSION)
    wget -N "https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip"
    unzip chromedriver_linux64.zip -d /usr/local/bin
    rm chromedriver_linux64.zip
  displayName: 'Install ChromeDriver'
  

- script: |
    echo "Current directory:"
    pwd
    echo "Listing root directory contents:"
    ls -la
    echo "Listing Tests directory contents:"
    ls -la $(ROBOT_TESTS_DIR)
    robot -d $(ROBOT_REPORTS_DIR) $(ROBOT_TESTS_DIR)
  displayName: 'Run Robot Framework tests'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(ROBOT_REPORTS_DIR)'
    artifactName: 'TestResults'
  displayName: 'Publish Test Results'


